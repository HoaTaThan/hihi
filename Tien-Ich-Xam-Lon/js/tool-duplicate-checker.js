function loadToolDuplicateChecker() {
  const html = `
    <h2>üß© Duplicate Checker Tool</h2>
    <div style="max-width: 700px; margin-bottom: 20px;">
      <label>Nh·∫≠p danh s√°ch c·ªôt 1 (m·ªói d√≤ng 1 m·ª•c):</label>
      <textarea id="dupInput1" rows="10" style="width: 100%;" placeholder="D√≤ng 1 c·ªôt 1\nD√≤ng 2 c·ªôt 1\n..."></textarea>
    </div>
    
    <div style="max-width: 700px; margin-bottom: 20px;">
      <label>Nh·∫≠p danh s√°ch c·ªôt 2 (m·ªói d√≤ng 1 m·ª•c):</label>
      <textarea id="dupInput2" rows="10" style="width: 100%;" placeholder="D√≤ng 1 c·ªôt 2\nD√≤ng 2 c·ªôt 2\n..."></textarea>
    </div>

    <button class="tool-btn" onclick="checkDuplicates()">Ki·ªÉm tra</button>

    <h3>‚úÖ Kh√¥ng tr√πng</h3>
    <textarea id="uniqueOutput" rows="6" style="width: 100%;" readonly></textarea>

    <h3>‚ö†Ô∏è Tr√πng l·∫∑p</h3>
    <textarea id="duplicateOutput" rows="6" style="width: 100%;" readonly></textarea>
    <div id="noResultMessage" style="color: red; margin-top: 10px;"></div>
  `;

  document.getElementById("content").innerHTML = html;
}

function checkDuplicates() {
  const inputLines1 = document.getElementById("dupInput1").value.trim().split('\n');
  const inputLines2 = document.getElementById("dupInput2").value.trim().split('\n');
  
  const seen = new Set();
  const duplicates = new Set();
  const uniqueInFirstColumn = [];
  const uniqueInSecondColumn = [];

  // Ki·ªÉm tra tr√πng l·∫∑p gi·ªØa c·ªôt 1 v√† c·ªôt 2
  for (const raw of inputLines1) {
    const original1 = raw.trim();
    if (!original1) continue;

    if (inputLines2.includes(original1)) {
      duplicates.add(original1); // Th√™m v√†o tr√πng l·∫∑p n·∫øu c√≥ m·∫∑t trong c·ªôt 2
    } else {
      uniqueInFirstColumn.push(original1); // D√≤ng kh√¥ng tr√πng v·ªõi c·ªôt 2
    }
  }

  // Ki·ªÉm tra c√°c gi√° tr·ªã c√≤n l·∫°i trong c·ªôt 2 kh√¥ng c√≥ trong c·ªôt 1
  for (const raw of inputLines2) {
    const original2 = raw.trim();
    if (!original2) continue;

    if (!seen.has(original2) && !duplicates.has(original2)) {
      uniqueInSecondColumn.push(original2); // D√≤ng kh√¥ng tr√πng v·ªõi c·ªôt 1
      seen.add(original2); // ƒê√°nh d·∫•u ƒë√£ ki·ªÉm tra c·ªôt 2
    }
  }

  // C·∫≠p nh·∫≠t k·∫øt qu·∫£ kh√¥ng tr√πng
  document.getElementById("uniqueOutput").value = [...uniqueInFirstColumn, ...uniqueInSecondColumn].join('\n');
  
  // C·∫≠p nh·∫≠t k·∫øt qu·∫£ tr√πng l·∫∑p
  document.getElementById("duplicateOutput").value = Array.from(duplicates).join('\n');
  
  // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu kh√¥ng c√≥ k·∫øt qu·∫£ tr√πng l·∫∑p
  const noResultMessage = document.getElementById("noResultMessage");
  if (duplicates.size === 0) {
    noResultMessage.innerText = "Kh√¥ng c√≥ d√≤ng tr√πng l·∫∑p n√†o!";
  } else {
    noResultMessage.innerText = "";
  }
}